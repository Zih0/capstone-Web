{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ziho/testapp2/capstoneWeb/client/src/utils/ImgUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Icon } from \"antd\";\nimport axios from \"axios\";\n\nconst FileUpload = props => {\n  _s();\n\n  const [Image, setImage] = useState([]);\n  const onDrop = useCallback(files => {\n    let formData = new FormData();\n    const config = {\n      header: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    formData.append(\"file\", files[0]);\n    axios.post(\"/api/datas/image\", formData, config).then(response => {\n      if (response.data.success) {\n        setImage([...Image, response.data.filePath]);\n        props.refreshFunction([...Image, response.data.filePath]);\n      } else {\n        alert(\"파일을 저장하는데 실패했습니다.\");\n      }\n    });\n  }, [Image]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n\n  const DeleteHandler = image => {\n    const currentIndex = Image.indexOf(image);\n    let newImage = [...Image];\n    newImage.splice(currentIndex, 1);\n    setImage(newImage);\n    props.refreshFunction(newImage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 200,\n          height: 160,\n          border: \"1px solid lightgray\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        ...getRootProps({\n          className: \"dropzone\"\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), isDragActive ? /*#__PURE__*/_jsxDEV(Icon, {\n          type: \"loading\",\n          style: {\n            fontSize: \"3rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n          type: \"plus\",\n          style: {\n            fontSize: \"3rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"350px\",\n        height: \"240px\",\n        overflowX: \"scroll\"\n      },\n      children: Image.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => DeleteHandler(image),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            minWidth: \"200px\",\n            width: \"200px\",\n            height: \"160px\"\n          },\n          src: `http://localhost:5000/${image}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileUpload, \"aP64uyvhD7Q+walafvNWcXSiF4o=\", false, function () {\n  return [useDropzone];\n});\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["/Users/ziho/testapp2/capstoneWeb/client/src/utils/ImgUpload.js"],"names":["React","useState","useCallback","useDropzone","Icon","axios","FileUpload","props","Image","setImage","onDrop","files","formData","FormData","config","header","append","post","then","response","data","success","filePath","refreshFunction","alert","getRootProps","getInputProps","isDragActive","DeleteHandler","image","currentIndex","indexOf","newImage","splice","display","justifyContent","width","height","border","alignItems","className","fontSize","overflowX","map","index","minWidth"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Icon } from \"antd\";\nimport axios from \"axios\";\n\nconst FileUpload = (props) => {\n  const [Image, setImage] = useState([]);\n\n  const onDrop = useCallback(\n    (files) => {\n      let formData = new FormData();\n      const config = {\n        header: { \"content-type\": \"multipart/form-data\" },\n      };\n      formData.append(\"file\", files[0]);\n\n      axios.post(\"/api/datas/image\", formData, config).then((response) => {\n        if (response.data.success) {\n          setImage([...Image, response.data.filePath]);\n\n          props.refreshFunction([...Image, response.data.filePath]);\n        } else {\n          alert(\"파일을 저장하는데 실패했습니다.\");\n        }\n      });\n    },\n    [Image]\n  );\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n  });\n\n  const DeleteHandler = (image) => {\n    const currentIndex = Image.indexOf(image);\n\n    let newImage = [...Image];\n    newImage.splice(currentIndex, 1);\n    setImage(newImage);\n    props.refreshFunction(newImage);\n  };\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      <section className=\"container\">\n        <div\n          style={{\n            width: 200,\n            height: 160,\n            border: \"1px solid lightgray\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n          {...getRootProps({ className: \"dropzone\" })}\n        >\n          <input {...getInputProps()} />\n          {isDragActive ? (\n            <Icon type=\"loading\" style={{ fontSize: \"3rem\" }} />\n          ) : (\n            <Icon type=\"plus\" style={{ fontSize: \"3rem\" }} />\n          )}\n        </div>\n      </section>\n\n      <div\n        style={{\n          display: \"flex\",\n          width: \"350px\",\n          height: \"240px\",\n          overflowX: \"scroll\",\n        }}\n      >\n        {Image.map((image, index) => (\n          <div onClick={() => DeleteHandler(image)} key={index}>\n            <img\n              style={{ minWidth: \"200px\", width: \"200px\", height: \"160px\" }}\n              src={`http://localhost:5000/${image}`}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}