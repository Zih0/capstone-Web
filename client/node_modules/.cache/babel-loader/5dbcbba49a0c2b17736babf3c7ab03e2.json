{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ziho/testapp2/capstoneWeb/client/src/components/views/RegisterPage/RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from '../../../_actions/user_actions';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nfunction RegisterPage(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  console.log(props.location.state.studentid);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      studentId: '',\n      name: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required('이름을 입력해주세요'),\n      studentId: Yup.number().min(10000000, '학번 8자리를 입력해주세요').required('학번을 입력해주세요').typeError('숫자를 입력해주세요'),\n      email: Yup.string().email('이메일 형식이 잘못되었습니다').required('이메일을 입력해주세요'),\n      password: Yup.string().min(6, '비밀번호는 최소 6자리 이상 입력해주세요').required('비밀번호를 입력해주세요'),\n      confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], '비밀번호를 똑같이 입력해주세요').required('비밀번호를 입력해주세요')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        let dataToSubmit = {\n          email: values.email,\n          password: values.password,\n          name: values.name,\n          studentId: values.studentId\n        };\n        dispatch(registerUser(dataToSubmit)).then(response => {\n          if (response.payload.success) {\n            props.history.push('/login');\n          } else {\n            alert(response.payload.message);\n          }\n        });\n        setSubmitting(false);\n      }, 500);\n    },\n    children: props => {\n      const {\n        values,\n        touched,\n        errors,\n        dirty,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        handleReset\n      } = props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            minWidth: '375px'\n          },\n          ...formItemLayout,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            required: true,\n            label: \"\\uC774\\uB984\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"name\",\n              placeholder: \"\\uC774\\uB984\",\n              type: \"text\",\n              value: values.name,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.name && touched.name ? 'text-input error' : 'text-input'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), errors.name && touched.name && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            required: true,\n            label: \"\\uD559\\uBC88\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"studentId\",\n              placeholder: \"\",\n              type: \"text\",\n              value: values.studentId,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.studentId && touched.studentId ? 'text-input error' : 'text-input'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), errors.studentId && touched.studentId && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.studentId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            required: true,\n            label: \"Email\",\n            hasFeedback: true,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"email\",\n              placeholder: \"Email\",\n              type: \"email\",\n              value: values.email,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.email && touched.email ? 'text-input error' : 'text-input'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            required: true,\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            hasFeedback: true,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"password\",\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n              type: \"password\",\n              value: values.password,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.password && touched.password ? 'text-input error' : 'text-input'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            required: true,\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n            hasFeedback: true,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"confirmPassword\",\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n              type: \"password\",\n              value: values.confirmPassword,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), errors.confirmPassword && touched.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.confirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 71\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSubmit,\n              type: \"primary\",\n              disabled: isSubmitting,\n              children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterPage, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/Users/ziho/testapp2/capstoneWeb/client/src/components/views/RegisterPage/RegisterPage.js"],"names":["React","useState","Formik","Yup","registerUser","useDispatch","Form","Input","Button","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","props","dispatch","console","log","location","state","studentid","email","studentId","name","password","confirmPassword","object","shape","string","required","number","min","typeError","oneOf","ref","values","setSubmitting","setTimeout","dataToSubmit","then","response","payload","success","history","push","alert","message","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","minWidth"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from '../../../_actions/user_actions';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\n\nfunction RegisterPage(props) {\n  \n  const dispatch = useDispatch();\n  console.log(props.location.state.studentid )\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        studentId: '',\n        name: '',\n        password: '',\n        confirmPassword: '',\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().required('이름을 입력해주세요'),\n        studentId: Yup.number().min(10000000, '학번 8자리를 입력해주세요').required('학번을 입력해주세요').typeError('숫자를 입력해주세요'),\n        email: Yup.string().email('이메일 형식이 잘못되었습니다').required('이메일을 입력해주세요'),\n        password: Yup.string().min(6, '비밀번호는 최소 6자리 이상 입력해주세요').required('비밀번호를 입력해주세요'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], '비밀번호를 똑같이 입력해주세요')\n          .required('비밀번호를 입력해주세요'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            studentId: values.studentId,\n          };\n\n          dispatch(registerUser(dataToSubmit)).then((response) => {\n            if (response.payload.success) {\n              props.history.push('/login');\n            } else {\n              alert(response.payload.message);\n            }\n          });\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {(props) => {\n        const { values, touched, errors, dirty, isSubmitting, handleChange, handleBlur, handleSubmit, handleReset } = props;\n        return (\n          <div className=\"contents\">\n            <h1>회원가입</h1>\n            <br />\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit}>\n              <Form.Item required label=\"이름\">\n                <Input id=\"name\" placeholder=\"이름\" type=\"text\" value={values.name} onChange={handleChange} onBlur={handleBlur} className={errors.name && touched.name ? 'text-input error' : 'text-input'} />\n                {errors.name && touched.name && <div className=\"input-feedback\">{errors.name}</div>}\n              </Form.Item>\n              <Form.Item required label=\"학번\">\n                <Input id=\"studentId\" placeholder='' type=\"text\" value={values.studentId} onChange={handleChange} onBlur={handleBlur} className={errors.studentId && touched.studentId ? 'text-input error' : 'text-input'} />\n                {errors.studentId && touched.studentId && <div className=\"input-feedback\">{errors.studentId}</div>}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback>\n                <Input id=\"email\" placeholder=\"Email\" type=\"email\" value={values.email} onChange={handleChange} onBlur={handleBlur} className={errors.email && touched.email ? 'text-input error' : 'text-input'} />\n                {errors.email && touched.email && <div className=\"input-feedback\">{errors.email}</div>}\n              </Form.Item>\n\n              <Form.Item required label=\"비밀번호\" hasFeedback>\n                <Input id=\"password\" placeholder=\"비밀번호\" type=\"password\" value={values.password} onChange={handleChange} onBlur={handleBlur} className={errors.password && touched.password ? 'text-input error' : 'text-input'} />\n                {errors.password && touched.password && <div className=\"input-feedback\">{errors.password}</div>}\n              </Form.Item>\n\n              <Form.Item required label=\"비밀번호 확인\" hasFeedback>\n                <Input id=\"confirmPassword\" placeholder=\"비밀번호 확인\" type=\"password\" value={values.confirmPassword} onChange={handleChange} onBlur={handleBlur} className={errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'} />\n                {errors.confirmPassword && touched.confirmPassword && <div className=\"input-feedback\">{errors.confirmPassword}</div>}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  회원가입\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}