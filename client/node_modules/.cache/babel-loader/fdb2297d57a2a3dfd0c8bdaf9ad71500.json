{"ast":null,"code":"var _jsxFileName = \"/Users/ziho/testapp2/capstoneWeb/client/src/components/views/RegisterPage/RegisterPage.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from '../../../_actions/user_actions';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 8\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      studentId: '',\n      name: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required('이름을 입력해주세요'),\n      studentId: Yup.number().min(10000000, '학번 8자리를 입력해주세요').required('학번을 입력해주세요').typeError('숫자를 입력해주세요'),\n      email: Yup.string().email('이메일 형식이 잘못되었습니다').required('이메일을 입력해주세요'),\n      password: Yup.string().min(6, '비밀번호는 최소 6자리 이상 입력해주세요').required('비밀번호를 입력해주세요'),\n      confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], '비밀번호를 똑같이 입력해주세요').required('비밀번호를 입력해주세요')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        let dataToSubmit = {\n          email: values.email,\n          password: values.password,\n          name: values.name,\n          studentId: values.studentId\n        };\n        dispatch(registerUser(dataToSubmit)).then(response => {\n          if (response.payload.success) {\n            props.history.push('/login');\n          } else {\n            alert(response.payload.message);\n          }\n        });\n        setSubmitting(false);\n      }, 500);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      dirty,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      handleReset\n    } = props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contents\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form, Object.assign({\n      style: {\n        minWidth: '375px'\n      }\n    }, formItemLayout, {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      label: \"\\uC774\\uB984\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"name\",\n      placeholder: \"\\uC774\\uB984\",\n      type: \"text\",\n      value: values.name,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.name && touched.name ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 49\n      }\n    }, errors.name)), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      label: \"\\uD559\\uBC88\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"studentId\",\n      placeholder: \"\\uD559\\uBC88\",\n      type: \"text\",\n      value: values.studentId,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.studentId && touched.studentId ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), errors.studentId && touched.studentId && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 59\n      }\n    }, errors.studentId)), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      label: \"Email\",\n      hasFeedback: true,\n      validateStatus: errors.email && touched.email ? 'error' : 'success',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"email\",\n      placeholder: \"Email\",\n      type: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.email && touched.email ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 51\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      hasFeedback: true,\n      validateStatus: errors.password && touched.password ? 'error' : 'success',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.password && touched.password ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 57\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"confirmPassword\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n      type: \"password\",\n      value: values.confirmPassword,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), errors.confirmPassword && touched.confirmPassword && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 71\n      }\n    }, errors.confirmPassword)), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: handleSubmit,\n      type: \"primary\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"\\uB2E4\\uC74C\"))));\n  });\n}\n\nexport default RegisterPage;","map":{"version":3,"sources":["/Users/ziho/testapp2/capstoneWeb/client/src/components/views/RegisterPage/RegisterPage.js"],"names":["React","moment","Formik","Yup","registerUser","useDispatch","Form","Input","Button","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","props","dispatch","email","studentId","name","password","confirmPassword","object","shape","string","required","number","min","typeError","oneOf","ref","values","setSubmitting","setTimeout","dataToSubmit","then","response","payload","success","history","push","alert","message","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","minWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from '../../../_actions/user_actions';\nimport { useDispatch } from 'react-redux';\n\nimport { Form, Input, Button } from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 8,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        studentId: '',\n        name: '',\n        password: '',\n        confirmPassword: '',\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().required('이름을 입력해주세요'),\n        studentId: Yup.number().min(10000000, '학번 8자리를 입력해주세요').required('학번을 입력해주세요').typeError('숫자를 입력해주세요'),\n        email: Yup.string().email('이메일 형식이 잘못되었습니다').required('이메일을 입력해주세요'),\n        password: Yup.string().min(6, '비밀번호는 최소 6자리 이상 입력해주세요').required('비밀번호를 입력해주세요'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], '비밀번호를 똑같이 입력해주세요')\n          .required('비밀번호를 입력해주세요'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            studentId: values.studentId,\n          };\n\n          dispatch(registerUser(dataToSubmit)).then((response) => {\n            if (response.payload.success) {\n              props.history.push('/login');\n            } else {\n              alert(response.payload.message);\n            }\n          });\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {(props) => {\n        const { values, touched, errors, dirty, isSubmitting, handleChange, handleBlur, handleSubmit, handleReset } = props;\n        return (\n          <div className=\"contents\">\n            <h1>회원가입</h1>\n            <br />\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit}>\n              <Form.Item required label=\"이름\">\n                <Input id=\"name\" placeholder=\"이름\" type=\"text\" value={values.name} onChange={handleChange} onBlur={handleBlur} className={errors.name && touched.name ? 'text-input error' : 'text-input'} />\n                {errors.name && touched.name && <div className=\"input-feedback\">{errors.name}</div>}\n              </Form.Item>\n              <Form.Item required label=\"학번\">\n                <Input id=\"studentId\" placeholder=\"학번\" type=\"text\" value={values.studentId} onChange={handleChange} onBlur={handleBlur} className={errors.studentId && touched.studentId ? 'text-input error' : 'text-input'} />\n                {errors.studentId && touched.studentId && <div className=\"input-feedback\">{errors.studentId}</div>}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? 'error' : 'success'}>\n                <Input id=\"email\" placeholder=\"Email\" type=\"email\" value={values.email} onChange={handleChange} onBlur={handleBlur} className={errors.email && touched.email ? 'text-input error' : 'text-input'} />\n                {errors.email && touched.email && <div className=\"input-feedback\">{errors.email}</div>}\n              </Form.Item>\n\n              <Form.Item required label=\"비밀번호\" hasFeedback validateStatus={errors.password && touched.password ? 'error' : 'success'}>\n                <Input id=\"password\" placeholder=\"비밀번호\" type=\"password\" value={values.password} onChange={handleChange} onBlur={handleBlur} className={errors.password && touched.password ? 'text-input error' : 'text-input'} />\n                {errors.password && touched.password && <div className=\"input-feedback\">{errors.password}</div>}\n              </Form.Item>\n\n              <Form.Item required label=\"비밀번호 확인\" hasFeedback>\n                <Input id=\"confirmPassword\" placeholder=\"비밀번호 확인\" type=\"password\" value={values.confirmPassword} onChange={handleChange} onBlur={handleBlur} className={errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'} />\n                {errors.confirmPassword && touched.confirmPassword && <div className=\"input-feedback\">{errors.confirmPassword}</div>}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  다음\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}