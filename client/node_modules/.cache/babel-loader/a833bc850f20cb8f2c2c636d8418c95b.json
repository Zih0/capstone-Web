{"ast":null,"code":"var _jsxFileName = \"/Users/ziho/testapp2/capstoneWeb/client/src/components/views/RegisterFace/Section/WebcamPage.js\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport { Progress, Button, Result, Typography } from 'antd';\nimport { Link } from 'react-router-dom';\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nconst {\n  Title\n} = Typography;\n\nconst WebcamPage = props => {\n  const [start, setStart] = useState(true);\n  const user = useSelector(state => state.user);\n  const [percent, setPercent] = useState(0);\n  const webcamRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const [capturing, setCapturing] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [video, setVideo] = useState('');\n\n  const StartCaptureClickHandler = () => {\n    setCapturing(true);\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n      mimeType: 'video/webm'\n    });\n    mediaRecorderRef.current.addEventListener('dataavailable', handleDataAvailable);\n    mediaRecorderRef.current.start();\n    let percentage = percent;\n    const timer = setInterval(() => {\n      percentage = percentage + 1;\n      setPercent(percentage);\n\n      if (percentage >= 100) {\n        setCapturing(false);\n        mediaRecorderRef.current.stop();\n        SaveHandler(recordedChunks);\n        setStart(false);\n        clearInterval(timer);\n      }\n    }, 100);\n  };\n\n  const handleDataAvailable = useCallback(({\n    data\n  }) => {\n    if (data.size > 0) {\n      setRecordedChunks(prev => prev.concat(data));\n    }\n  }, [setRecordedChunks]);\n\n  const SaveHandler = file => {\n    if (recordedChunks.length) {\n      const blob = new Blob(file, {\n        type: \"video/webm\"\n      });\n      let formData = new FormData();\n      const config = {\n        header: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      formData.append('studentid', user.userData.studentId);\n      formData.append('file', blob);\n      console.log(recordedChunks);\n      console.log(blob);\n      axios.post('/api/datas/uploadfile', formData, config).then(response => {\n        if (response.data.success) {\n          setVideo(response.data.filePath);\n        } else {\n          alert('파일을 저장하는데 실패했습니다.');\n        }\n      });\n    }\n  };\n\n  if (start) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"\\uC601\\uC0C1 \\uB4F1\\uB85D\"), /*#__PURE__*/React.createElement(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      height: 230,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }), capturing ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, \" \\uB179\\uD654\\uC911 \\uD83D\\uDCF9 \") : /*#__PURE__*/React.createElement(Button, {\n      onClick: StartCaptureClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, \"\\uC601\\uC0C1\\uB179\\uD654\\uC2DC\\uC791\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '300px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Progress, {\n      percent: percent,\n      showInfo: false,\n      strokeWidth: 13,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Result, {\n      status: \"success\",\n      title: \"\\uC5BC\\uAD74 \\uB4F1\\uB85D\\uC774 \\uC644\\uB8CC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4!\",\n      subTitle: \"\\uB2E4\\uC74C\\uC73C\\uB85C \\uC218\\uAC15\\uC911\\uC778 \\uC218\\uC5C5\\uC744 \\uB4F1\\uB85D\\uD574\\uC8FC\\uC138\\uC694.\",\n      extra: [/*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        key: \"save\",\n        onClick: () => SaveHandler(recordedChunks),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      }, \"\\uC218\\uC5C5 \\uB4F1\\uB85D\"))],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nexport default WebcamPage;","map":{"version":3,"sources":["/Users/ziho/testapp2/capstoneWeb/client/src/components/views/RegisterFace/Section/WebcamPage.js"],"names":["React","useState","useRef","useCallback","Progress","Button","Result","Typography","Link","Webcam","axios","useSelector","Title","WebcamPage","props","start","setStart","user","state","percent","setPercent","webcamRef","mediaRecorderRef","capturing","setCapturing","recordedChunks","setRecordedChunks","video","setVideo","StartCaptureClickHandler","current","MediaRecorder","stream","mimeType","addEventListener","handleDataAvailable","percentage","timer","setInterval","stop","SaveHandler","clearInterval","data","size","prev","concat","file","length","blob","Blob","type","formData","FormData","config","header","append","userData","studentId","console","log","post","then","response","success","filePath","alert","width"],"mappings":"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","sourcesContent":["import React,  { useState, useRef, useCallback } from 'react';\nimport { Progress,Button, Result,Typography } from 'antd';\nimport {Link} from 'react-router-dom'\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\n\n\nconst { Title } = Typography;\n\nconst WebcamPage = (props) => {\n    const [start, setStart] = useState(true);\n    const user = useSelector((state) => state.user);\n    const [percent, setPercent] = useState(0);\n    const webcamRef = useRef(null);\n    const mediaRecorderRef = useRef(null);\n    const [capturing, setCapturing] = useState(false);\n    const [recordedChunks, setRecordedChunks] = useState([]);\n    const [video, setVideo] = useState('');\n  \n    const StartCaptureClickHandler = () => {\n      setCapturing(true);\n      mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n        mimeType: 'video/webm',\n      });\n      mediaRecorderRef.current.addEventListener('dataavailable', handleDataAvailable);\n      mediaRecorderRef.current.start();\n  \n  \n      let percentage = percent;\n      const timer = setInterval(() => {\n        percentage = percentage + 1;\n        setPercent(percentage);\n        if (percentage >= 100) {\n          setCapturing(false);\n          mediaRecorderRef.current.stop();\n          SaveHandler(recordedChunks);\n          setStart(false)\n          clearInterval(timer);\n        }\n      }, 100);\n    };\n  \n    const handleDataAvailable = useCallback(\n      ({ data }) => {\n        if (data.size > 0) {\n          setRecordedChunks((prev) => prev.concat(data));\n        }\n      },\n      [setRecordedChunks]\n    );\n  \n    const SaveHandler = (file) => {\n      if (recordedChunks.length) {\n        const blob = new Blob(file, {\n          type: \"video/webm\"\n        });\n      \n      let formData = new FormData();\n      const config = {\n        header: { 'content-type': 'multipart/form-data' },\n      };\n      formData.append('studentid', user.userData.studentId);\n      formData.append('file', blob);\n      console.log(recordedChunks);\n      console.log(blob);\n      \n      axios.post('/api/datas/uploadfile', formData, config).then((response) => {\n        if (response.data.success) {\n          setVideo(response.data.filePath);\n        } else {\n          alert('파일을 저장하는데 실패했습니다.');\n        }\n      });\n    }\n    };\n  \n\n  if (start) {\n    return (\n        <>\n          <div className=\"app\">\n            <Title>영상 등록</Title>\n            <Webcam\n              audio={false}\n              ref={webcamRef}\n              height={230}\n            />\n            <br />\n            {capturing ? (\n              <p> 녹화중 📹 </p>\n            ) : (\n              <Button onClick={StartCaptureClickHandler}>영상녹화시작</Button>\n            )}\n            <br />\n            <div style={{ width: '300px' }}>\n              <Progress percent={percent} showInfo={false} strokeWidth={13} />\n            </div>\n          </div>\n        </>\n      );\n  } else {\n    return (\n      <>\n        <Result\n          status=\"success\"\n          title=\"얼굴 등록이 완료되었습니다!\"\n          subTitle=\"다음으로 수강중인 수업을 등록해주세요.\"\n          extra={[\n            <Button type=\"primary\" key=\"save\" onClick={() => SaveHandler(recordedChunks)}>\n              <Link to=\"/course\">수업 등록</Link>\n            </Button>,\n          ]}\n        />\n      </>\n    );\n  }\n};\n\nexport default WebcamPage;\n"]},"metadata":{},"sourceType":"module"}