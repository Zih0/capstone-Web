{"ast":null,"code":"var _jsxFileName = \"/Users/ziho/testapp2/capstoneWeb/client/src/utils/VideoUpload.js\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport Webcam from 'react-webcam';\nimport { Progress, Button, Typography } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nconst {\n  Title,\n  Paragraph,\n  Text\n} = Typography;\n\nconst VideoUpload = props => {\n  const user = useSelector(state => state.user);\n  const [percent, setPercent] = useState(0);\n  const webcamRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const [capturing, setCapturing] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [video, setVideo] = useState('');\n  const [imgSrc, setImgSrc] = useState(null);\n\n  const StartCaptureClickHandler = () => {\n    setCapturing(true);\n    setRecordedChunks([]);\n    setImgSrc(null);\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n      mimeType: 'video/webm'\n    });\n    mediaRecorderRef.current.addEventListener('dataavailable', handleDataAvailable);\n    mediaRecorderRef.current.start();\n    let percentage = percent;\n    const timer = setInterval(() => {\n      percentage = percentage + 1;\n      setPercent(percentage);\n\n      if (percentage >= 100) {\n        setCapturing(false);\n        mediaRecorderRef.current.stop();\n        setPercent(0);\n        clearInterval(timer);\n      }\n    }, 100);\n  };\n\n  const handleDataAvailable = useCallback(({\n    data\n  }) => {\n    if (data.size > 0) {\n      setRecordedChunks([data]);\n      MakeBlob([data]);\n    }\n  }, [setRecordedChunks]);\n\n  const MakeBlob = file => {\n    const blob = new Blob(file, {\n      type: \"video/webm\"\n    });\n    const url = URL.createObjectURL(blob);\n    setImgSrc(url);\n  };\n\n  const SaveHandler = file => {\n    const blob = new Blob(file, {\n      type: \"video/webm\"\n    });\n    let formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    formData.append('studentid', user.userData.studentId);\n    formData.append('file', blob);\n    axios.post('/api/datas/uploadfile', formData, config).then(response => {\n      if (response.data.success) {\n        setVideo(response.data.filePath);\n        props.saveVideoHandler(response.data.filePath);\n        props.updateStartHandler(false);\n      } else {\n        alert('파일을 저장하는데 실패했습니다.');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"\\uC601\\uC0C1 \\uB4F1\\uB85D\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Webcam, {\n    audio: false,\n    ref: webcamRef,\n    height: 230,\n    screenshotFormat: \"video/webm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, imgSrc && /*#__PURE__*/React.createElement(\"video\", {\n    controls: true,\n    height: \"230\",\n    autoPlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: imgSrc,\n    type: \"video/webm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, capturing ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \" \\uB179\\uD654\\uC911 \\uD83D\\uDCF9 \") : /*#__PURE__*/React.createElement(Button, {\n    onClick: StartCaptureClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"\\uC601\\uC0C1 \\uB179\\uD654\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, imgSrc && /*#__PURE__*/React.createElement(Button, {\n    onClick: () => SaveHandler(recordedChunks),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"\\uC601\\uC0C1 \\uC800\\uC7A5\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '300px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Progress, {\n    percent: percent,\n    showInfo: false,\n    strokeWidth: 13,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  })), imgSrc && /*#__PURE__*/React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"\\uB2E4\\uC2DC \\uB179\\uD654\\uD558\\uACE0 \\uC2F6\\uC73C\\uBA74 \", /*#__PURE__*/React.createElement(Text, {\n    code: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 34\n    }\n  }, \"\\uC601\\uC0C1\\uB179\\uD654\"), \"\\uB97C \\uB20C\\uB7EC\\uC8FC\\uC2DC\\uACE0, \\uD574\\uB2F9 \\uC601\\uC0C1\\uC73C\\uB85C \\uB4F1\\uB85D\\uD558\\uC2DC\\uB824\\uBA74 \", /*#__PURE__*/React.createElement(Text, {\n    code: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 80\n    }\n  }, \"\\uC601\\uC0C1\\uC800\\uC7A5\"), \"\\uC744 \\uB20C\\uB7EC\\uC8FC\\uC138\\uC694.\")));\n};\n\nexport default VideoUpload;","map":{"version":3,"sources":["/Users/ziho/testapp2/capstoneWeb/client/src/utils/VideoUpload.js"],"names":["React","useState","useRef","useCallback","Webcam","Progress","Button","Typography","axios","useSelector","Title","Paragraph","Text","VideoUpload","props","user","state","percent","setPercent","webcamRef","mediaRecorderRef","capturing","setCapturing","recordedChunks","setRecordedChunks","video","setVideo","imgSrc","setImgSrc","StartCaptureClickHandler","current","MediaRecorder","stream","mimeType","addEventListener","handleDataAvailable","start","percentage","timer","setInterval","stop","clearInterval","data","size","MakeBlob","file","blob","Blob","type","url","URL","createObjectURL","SaveHandler","formData","FormData","config","header","append","userData","studentId","post","then","response","success","filePath","saveVideoHandler","updateStartHandler","alert","display","marginLeft","width"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport Webcam from 'react-webcam';\nimport { Progress, Button, Typography } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\n\n\nconst { Title, Paragraph , Text } = Typography;\n\nconst VideoUpload = (props) => {\n  const user = useSelector((state) => state.user);\n  const [percent, setPercent] = useState(0);\n  const webcamRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const [capturing, setCapturing] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [video, setVideo] = useState('');\n  const [imgSrc, setImgSrc] = useState(null);\n\n\n  const StartCaptureClickHandler = () => {\n    setCapturing(true);\n    setRecordedChunks([]);\n    setImgSrc(null);\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n      mimeType: 'video/webm',\n    });\n    mediaRecorderRef.current.addEventListener('dataavailable', handleDataAvailable);\n    mediaRecorderRef.current.start();\n    \n    let percentage = percent;\n    const timer = setInterval(() => {\n      percentage = percentage + 1;\n      setPercent(percentage);\n      if (percentage >= 100) {\n        setCapturing(false);\n        mediaRecorderRef.current.stop();  \n        setPercent(0);\n        clearInterval(timer);\n      }\n    }, 100);\n  };\n\n  const handleDataAvailable = useCallback(\n    ({ data }) => {\n      if (data.size > 0) {\n        setRecordedChunks([data]);\n        MakeBlob([data]);\n      }\n    },\n    [setRecordedChunks]\n  );\n\n\n  const MakeBlob = (file) =>{\n      const blob = new Blob(file, {\n        type: \"video/webm\"\n      });\n      const url = URL.createObjectURL(blob);\n      setImgSrc(url);  \n}\n\n  const SaveHandler = (file) => {\n    const blob = new Blob(file, {\n        type: \"video/webm\"\n      });\n    let formData = new FormData();\n    const config = {\n      header: { 'content-type': 'multipart/form-data' },\n    };\n    formData.append('studentid', user.userData.studentId);\n    formData.append('file', blob);\n    axios.post('/api/datas/uploadfile', formData, config).then((response) => {\n      if (response.data.success) {\n        setVideo(response.data.filePath);\n        props.saveVideoHandler(response.data.filePath);\n        props.updateStartHandler(false);\n\n      } else {\n        alert('파일을 저장하는데 실패했습니다.');\n      }\n    });\n  \n  };\n\n  \n\n\n  return (\n    <>\n      <div className=\"app\">\n        \n        <Title>영상 등록</Title>\n        <div style={{display: 'flex'}}>\n        <Webcam\n          audio={false}\n          ref={webcamRef}\n          height={230}\n          screenshotFormat=\"video/webm\"\n        />\n        <div style={{marginLeft: '1rem'}}>\n        {imgSrc && (\n        <video controls height=\"230\" autoPlay>\n            <source src={imgSrc} type=\"video/webm\" />\n        </video>\n      )}\n      </div>\n      </div>\n      <br />\n        <div style={{display: 'flex'}}>\n        {capturing ? (\n          <p> 녹화중 📹 </p>\n        ) : (\n          <Button onClick={StartCaptureClickHandler}>영상 녹화</Button>\n        )}\n        <div style={{marginLeft: '1rem'}}>\n        {imgSrc && (\n          <Button onClick={() => SaveHandler(recordedChunks)}>영상 저장</Button>\n      )}\n      </div>\n        </div>\n        <br />\n        <div style={{ width: '300px' }}>\n          <Progress percent={percent} showInfo={false} strokeWidth={13} />\n        </div>\n        {imgSrc && (\n          <Paragraph>다시 녹화하고 싶으면 <Text code>영상녹화</Text>를 눌러주시고, 해당 영상으로 등록하시려면 <Text code>영상저장</Text>을 눌러주세요.</Paragraph>\n          )}\n      </div>\n    </>\n  );\n};\n\nexport default VideoUpload;\n"]},"metadata":{},"sourceType":"module"}