{"ast":null,"code":"var _jsxFileName = \"/Users/ziho/testapp2/capstoneWeb/client/src/utils/FileUpload.js\";\nimport React, { useState, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport axios from \"axios\";\nimport { Typography } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nconst {\n  Title,\n  Paragraph,\n  Text\n} = Typography;\n\nconst FileUpload = props => {\n  const user = useSelector(state => state.user);\n  const [Video, setVideo] = useState('');\n  const [ImgSrc, setImgSrc] = useState('');\n  const onDrop = useCallback(files => {\n    let formData = new FormData();\n    const config = {\n      header: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    formData.append(\"file\", files[0]);\n    formData.append('studentid', user.userData.studentId);\n    axios.post('/api/datas/uploadfile', formData, config).then(response => {\n      if (response.data.success) {\n        setVideo(response.data.filePath);\n        props.saveVideoHandler(response.data.filePath);\n        props.updateStartHandler(false);\n      } else {\n        alert('파일을 저장하는데 실패했습니다.');\n      }\n    });\n  }, [Video]);\n\n  const MakeBlob = file => {\n    const blob = new Blob(file, {\n      type: \"video/webm\"\n    });\n    const url = URL.createObjectURL(blob);\n    setImgSrc(url);\n  };\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: 'video/*'\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: {\n      width: 300,\n      height: 240,\n      border: \"1px solid lightgray\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  }, getRootProps({\n    className: \"dropzone\"\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), isDragActive ? /*#__PURE__*/React.createElement(LoadingOutlined, {\n    style: {\n      fontSize: \"3rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Paragraph, {\n    style: {\n      fontSize: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \" \\uC5C5\\uB85C\\uB4DC \\uD560 \\uB3D9\\uC601\\uC0C1\\uC744 \", /*#__PURE__*/React.createElement(Text, {\n    warning: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 65\n    }\n  }, \"\\uB4DC\\uB798\\uADF8\"), \"\\uD558\\uAC70\\uB098 \\uBC15\\uC2A4\\uB97C \\uD074\\uB9AD\\uD574\\uC8FC\\uC138\\uC694 \")))));\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/ziho/testapp2/capstoneWeb/client/src/utils/FileUpload.js"],"names":["React","useState","useCallback","useDropzone","axios","Typography","LoadingOutlined","PlusOutlined","useSelector","Title","Paragraph","Text","FileUpload","props","user","state","Video","setVideo","ImgSrc","setImgSrc","onDrop","files","formData","FormData","config","header","append","userData","studentId","post","then","response","data","success","filePath","saveVideoHandler","updateStartHandler","alert","MakeBlob","file","blob","Blob","type","url","URL","createObjectURL","getRootProps","getInputProps","isDragActive","accept","display","justifyContent","width","height","border","alignItems","className","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport axios from \"axios\";\nimport {Typography} from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\n\n\nconst {Title, Paragraph, Text} = Typography;\nconst FileUpload = (props) => {\n  const user = useSelector((state) => state.user);\n  const [Video, setVideo] = useState('');\n  const [ImgSrc, setImgSrc] = useState('')\n  const onDrop = useCallback(\n    (files) => {\n      let formData = new FormData();\n      const config = {\n        header: { \"content-type\": \"multipart/form-data\" },\n      };\n      formData.append(\"file\", files[0]);\n      formData.append('studentid', user.userData.studentId);\n\n\n    axios.post('/api/datas/uploadfile', formData, config).then((response) => {\n      if (response.data.success) {\n        setVideo(response.data.filePath);\n        props.saveVideoHandler(response.data.filePath);\n        props.updateStartHandler(false);\n\n      } else {\n        alert('파일을 저장하는데 실패했습니다.');\n      }\n    });\n    },\n    [Video]\n  );\n\n\n\n  const MakeBlob = (file) =>{\n    const blob = new Blob(file, {\n      type: \"video/webm\"\n    });\n    const url = URL.createObjectURL(blob);\n    setImgSrc(url);  \n}\n\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: 'video/*'\n  });\n\n\n  return (\n    <div >\n    <div className=\"app\" style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      \n      <section className=\"container\">\n        <div\n          style={{\n            width: 300,\n            height: 240,\n            border: \"1px solid lightgray\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n          {...getRootProps({ className: \"dropzone\" })}\n        >\n          <input {...getInputProps()} />\n          {isDragActive ? (\n            <LoadingOutlined  style={{ fontSize: \"3rem\" }} />\n          ) : (\n            <Paragraph style={{ fontSize: \"1rem\" }}> 업로드 할 동영상을 <Text warning>드래그</Text>하거나 박스를 클릭해주세요 </Paragraph> \n          )}\n        </div>\n      </section>\n    </div>\n    </div>\n  );\n};\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}