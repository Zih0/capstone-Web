{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ziho/testapp2/capstoneWeb/client/src/components/views/RegisterPage/RegisterCourse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Input } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { SearchOutlined } from '@ant-design/icons';\nconst {\n  Search\n} = Input;\n\nconst RegisterCourse = () => {\n  _s();\n\n  const user = useSelector(state => state.user);\n  const [courses, setCourses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchText, setSearchText] = useState('');\n  const [searchedColumn, setSearchedColumn] = useState('');\n  const [buttondisabled, setButtondisabled] = useState(false);\n  const [checkKeys, setCheckKeys] = useState([]);\n\n  const getCourses = () => {\n    setLoading(true);\n    axios.get(\"/api/datas/course\").then(response => {\n      if (response.data.success) {\n        setCourses([...response.data.courseInfo]);\n        console.log(response.data.courseInfo);\n        setLoading(false);\n      } else {\n        alert(\"수업 정보를 가져오는데 실패했습니다.\");\n      }\n    });\n  };\n\n  const submitHandler = () => {\n    let body = {\n      userId: user.userData.studentId,\n      courses: checkKeys\n    };\n    axios.post('/api/datas/update/idincourse', body).then(response => {\n      if (response.data.success) {\n        console.log(response.data);\n      } else {\n        alert('ERROR!!');\n      }\n    });\n  };\n\n  useEffect(() => {\n    getCourses();\n  }, []); // rowSelection object indicates the need for row selection\n\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: '검색어를 입력해주세요',\n        value: selectedKeys[0],\n        onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n        onPressEnter: () => handleSearch(selectedKeys, confirm, dataIndex),\n        style: {\n          width: 188,\n          marginBottom: 8,\n          display: 'block'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => handleSearch(selectedKeys, confirm, dataIndex),\n        icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 23\n        }, this),\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleReset(clearFilters),\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        children: \"\\uCD08\\uAE30\\uD654\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this),\n    filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n      style: {\n        color: filtered ? '#1890ff' : undefined\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }, this),\n    onFilter: (value, record) => record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : ''\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setSearchText('');\n  };\n\n  const columns = [{\n    title: '캠퍼스',\n    dataIndex: 'campus',\n    key: 'campus',\n    width: '10%',\n    ...getColumnSearchProps('campus')\n  }, {\n    title: '전공',\n    dataIndex: 'major',\n    key: 'major',\n    width: '20%',\n    ...getColumnSearchProps('major')\n  }, {\n    title: '학년',\n    dataIndex: 'year',\n    key: 'year',\n    width: '10%',\n    ...getColumnSearchProps('year')\n  }, {\n    title: '수업',\n    dataIndex: 'course',\n    key: 'course',\n    width: '30%',\n    ...getColumnSearchProps('course')\n  }, {\n    title: '분반',\n    dataIndex: 'class',\n    key: 'class',\n    width: '10%',\n    ...getColumnSearchProps('class')\n  }, {\n    title: '담당교수',\n    dataIndex: 'prof',\n    key: 'prof',\n    width: '10%',\n    ...getColumnSearchProps('prof')\n  }];\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      setCheckKeys(selectedRows);\n\n      if (selectedRowKeys.length > 0) {\n        setButtondisabled(true);\n      } else {\n        setButtondisabled(false);\n      }\n\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n      console.log(checkKeys);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '80%',\n        margin: '0 auto',\n        marginTop: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        rowSelection: rowSelection,\n        columns: columns,\n        dataSource: courses // bordered={true}\n        ,\n        loading: loading,\n        scroll: {\n          y: 450\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          marginRight: '1rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: submitHandler,\n          disabled: !buttondisabled,\n          loading: loading,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"\\uB4F1\\uB85D\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 11\n  }, this);\n};\n\n_s(RegisterCourse, \"mN0bcvfGJJ1m7vXmmnoLuvpTKZ8=\", false, function () {\n  return [useSelector];\n});\n\n_c = RegisterCourse;\nexport default RegisterCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterCourse\");","map":{"version":3,"sources":["/Users/ziho/testapp2/capstoneWeb/client/src/components/views/RegisterPage/RegisterCourse.js"],"names":["React","useState","useEffect","Table","Button","Input","axios","useSelector","Link","SearchOutlined","Search","RegisterCourse","user","state","courses","setCourses","loading","setLoading","searchText","setSearchText","searchedColumn","setSearchedColumn","buttondisabled","setButtondisabled","checkKeys","setCheckKeys","getCourses","get","then","response","data","success","courseInfo","console","log","alert","submitHandler","body","userId","userData","studentId","post","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","e","target","value","handleSearch","width","marginBottom","display","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","columns","title","key","rowSelection","onChange","selectedRowKeys","selectedRows","length","margin","marginTop","y","justifyContent","marginRight"],"mappings":"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","sourcesContent":["import React , {useState ,useEffect} from 'react'\nimport { Table, Button , Input } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport {Link} from 'react-router-dom'\nimport { SearchOutlined } from '@ant-design/icons';\n\n\nconst { Search } = Input;\n\nconst RegisterCourse = () => {\n    const user = useSelector((state) => state.user);\n    const [courses, setCourses] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [searchText, setSearchText] = useState('')\n    const [searchedColumn, setSearchedColumn] = useState('')\n    const [buttondisabled, setButtondisabled] = useState(false)\n    const [checkKeys, setCheckKeys] = useState([])\n\n    const getCourses = () => {\n      setLoading(true)\n      axios.get(\"/api/datas/course\").then((response) => {\n        if (response.data.success) {\n          setCourses([...response.data.courseInfo]);\n          console.log(response.data.courseInfo)\n          setLoading(false)\n        } else {\n          alert(\"수업 정보를 가져오는데 실패했습니다.\");\n        }\n      });\n    };\n    \n    const submitHandler = () =>{\n      let body ={\n        userId: user.userData.studentId,\n        courses: checkKeys,\n      }\n      axios.post('/api/datas/update/idincourse', body).then((response) => {\n        if (response.data.success) {\n          console.log(response.data)\n        } else {\n          alert('ERROR!!');\n        }\n      });\n    }\n\n    useEffect(() => {\n      getCourses();\n      }, []);\n\n      \n      // rowSelection object indicates the need for row selection\n    \n      const getColumnSearchProps = (dataIndex) => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n          <div style={{ padding: 8 }}>\n            <Input\n              placeholder={'검색어를 입력해주세요'}\n              value={selectedKeys[0]}\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n              onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\n            />\n              <Button\n                type=\"primary\"\n                onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                icon={<SearchOutlined />}\n                size=\"small\"\n                style={{ width: 90 }}\n              >\n                검색\n              </Button>\n              <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                초기화\n              </Button>\n          </div>\n        ),\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value, record) =>\n          record[dataIndex]\n            ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n            : '',\n\n      });\n    \n      const handleSearch = (selectedKeys, confirm, dataIndex) => {\n        confirm();\n        setSearchText(selectedKeys[0])\n        setSearchedColumn(dataIndex)\n      };\n      const handleReset = clearFilters => {\n        clearFilters();\n        setSearchText('')\n\n      };\n\n      const columns = [\n        {\n          title: '캠퍼스',\n          dataIndex: 'campus',\n          key: 'campus',\n          width: '10%',\n          ...getColumnSearchProps('campus')\n        },\n        {\n          title: '전공',\n          dataIndex: 'major',\n          key: 'major',\n          width: '20%',\n          ...getColumnSearchProps('major')\n        },\n        {\n          title: '학년',\n          dataIndex: 'year',\n          key: 'year',\n          width: '10%',\n          ...getColumnSearchProps('year')\n        },\n        {\n          title: '수업',\n          dataIndex: 'course',\n          key: 'course',\n          width: '30%',\n          ...getColumnSearchProps('course')\n        },\n        {\n            title: '분반',\n            dataIndex: 'class',\n            key: 'class',\n            width: '10%',\n            ...getColumnSearchProps('class')\n          },\n          \n          {\n            title: '담당교수',\n            dataIndex: 'prof',\n            key: 'prof',\n            width: '10%',\n            ...getColumnSearchProps('prof')\n          },\n      ]\n\n      \n\n      const rowSelection = {\n        onChange: (selectedRowKeys, selectedRows) => {\n        setCheckKeys(selectedRows)\n        if (selectedRowKeys.length > 0){\n          setButtondisabled(true)\n        }else{\n          setButtondisabled(false)\n        }\n        console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n        console.log(checkKeys)\n      },\n      \n        };\n\n        return (\n          <div>\n            <div style={{width:'80%', margin:'0 auto',marginTop:'2rem'}}>\n          <Table\n          rowSelection={rowSelection}\n          columns={columns}\n          dataSource={courses}\n          // bordered={true}\n          loading={loading}\n          scroll={{ y: 450 }}\n          />\n          <div style={{display: 'flex', justifyContent: 'flex-end', marginRight: '1rem'}}>\n          <Button type=\"primary\" onClick={submitHandler} disabled={!buttondisabled} loading={loading}>\n            <Link to='/'>등록하기</Link></Button>\n          </div>\n          </div>\n        </div>\n        )\n  \n}\n\nexport default RegisterCourse\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}