{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ziho/testapp2/capstoneWeb/client/src/components/views/LoginPage/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { loginUser } from '../../../_actions/user_actions';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, Button, Checkbox, Typography } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nconst {\n  Title\n} = Typography;\n\nfunction LoginPage(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem('rememberMe') ? true : false;\n  const [formErrorMessage, setFormErrorMessage] = useState('');\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe);\n  };\n\n  const initialEmail = localStorage.getItem('rememberMe') ? localStorage.getItem('rememberMe') : '';\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Email 형태로 입력해주세요').required('Email을 입력해주세요'),\n      password: Yup.string().min(6, '비밀번호는 최소 6자 이상 입력해주세요').required('비밀번호를 입력해주세요')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        let dataToSubmit = {\n          email: values.email,\n          password: values.password\n        };\n        dispatch(loginUser(dataToSubmit)).then(response => {\n          if (response.payload.loginSuccess) {\n            window.localStorage.setItem('userId', response.payload.userId);\n\n            if (rememberMe === true) {\n              window.localStorage.setItem('rememberMe', values.id);\n            } else {\n              localStorage.removeItem('rememberMe');\n            }\n\n            props.history.push('/');\n          } else {\n            setFormErrorMessage(response.payload.message);\n          }\n        }).catch(err => {\n          setFormErrorMessage('이메일 또는 비밀번호를 확인해주세요.');\n          setTimeout(() => {\n            setFormErrorMessage('');\n          }, 3000);\n        });\n        setSubmitting(false);\n      }, 500);\n    },\n    children: props => {\n      const {\n        values,\n        touched,\n        errors,\n        dirty,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        handleReset\n      } = props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          level: 2,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          style: {\n            width: '350px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"email\",\n              prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n                style: {\n                  color: 'rgba(0,0,0,.25)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 27\n              }, this),\n              placeholder: \"Email\",\n              type: \"email\",\n              value: values.email,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.email && touched.email ? 'text-input error' : 'text-input'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"password\",\n              prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n                style: {\n                  color: 'rgba(0,0,0,.25)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 27\n              }, this),\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n              type: \"password\",\n              value: values.password,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.password && touched.password ? 'text-input error' : 'text-input'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), formErrorMessage && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: '#ff0000bf',\n                fontSize: '0.7rem',\n                border: '1px solid',\n                padding: '1rem',\n                borderRadius: '10px'\n              },\n              children: formErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              id: \"rememberMe\",\n              onChange: handleRememberMe,\n              checked: rememberMe,\n              children: \"\\uC790\\uB3D9 \\uB85C\\uADF8\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                className: \"login-form-button\",\n                style: {\n                  minWidth: '100%'\n                },\n                disabled: isSubmitting,\n                onSubmit: handleSubmit,\n                children: \"\\uB85C\\uADF8\\uC778\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/register\",\n              children: \"\\uD68C\\uC6D0\\uC774 \\uC544\\uB2C8\\uC2E0\\uAC00\\uC694?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"Eov1X6ekopr8zoqTwvyOuUL/ay0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoginPage;\nexport default _c2 = withRouter(LoginPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/ziho/testapp2/capstoneWeb/client/src/components/views/LoginPage/LoginPage.js"],"names":["React","useState","withRouter","loginUser","Formik","Yup","Form","Input","Button","Checkbox","Typography","UserOutlined","LockOutlined","useDispatch","Title","LoginPage","props","dispatch","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","email","password","object","shape","string","required","min","values","setSubmitting","setTimeout","dataToSubmit","then","response","payload","loginSuccess","window","setItem","userId","id","removeItem","history","push","message","catch","err","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","width","color","fontSize","border","padding","borderRadius","minWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { loginUser } from '../../../_actions/user_actions';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form,  Input, Button, Checkbox, Typography } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\nimport { useDispatch } from 'react-redux';\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem('rememberMe') ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('');\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe);\n  };\n\n  const initialEmail = localStorage.getItem('rememberMe') ? localStorage.getItem('rememberMe') : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string().email('Email 형태로 입력해주세요').required('Email을 입력해주세요'),\n        password: Yup.string()\n          .min(6, '비밀번호는 최소 6자 이상 입력해주세요')\n          .required('비밀번호를 입력해주세요'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then((response) => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push('/');\n              } else {\n                setFormErrorMessage(response.payload.message);\n              }\n            })\n            .catch((err) => {\n              setFormErrorMessage('이메일 또는 비밀번호를 확인해주세요.');\n              setTimeout(() => {\n                setFormErrorMessage('');\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <Title level={2}>로그인</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={errors.email && touched.email ? 'text-input error' : 'text-input'}\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"비밀번호\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label>\n                  <p\n                    style={{\n                      color: '#ff0000bf',\n                      fontSize: '0.7rem',\n                      border: '1px solid',\n                      padding: '1rem',\n                      borderRadius: '10px',\n                    }}\n                  >\n                    {formErrorMessage}\n                  </p>\n                </label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe}>\n                  자동 로그인\n                </Checkbox>\n                <div>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                    style={{ minWidth: '100%' }}\n                    disabled={isSubmitting}\n                    onSubmit={handleSubmit}\n                  >\n                    로그인\n                  </Button>\n                </div>\n                <a href=\"/register\">회원이 아니신가요?</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default withRouter(LoginPage);\n"]},"metadata":{},"sourceType":"module"}