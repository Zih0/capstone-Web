{"ast":null,"code":"var _jsxFileName = \"/Users/ziho/testapp2/capstoneWeb/client/src/utils/VideoUpload.js\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport Webcam from 'react-webcam';\nimport { Progress, Button, Typography } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nconst {\n  Title\n} = Typography;\n\nconst VideoUpload = props => {\n  const user = useSelector(state => state.user);\n  const [percent, setPercent] = useState(0);\n  const webcamRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const [capturing, setCapturing] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [video, setVideo] = useState('');\n\n  const StartCaptureClickHandler = () => {\n    setCapturing(true);\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n      mimeType: 'video/webm'\n    });\n    mediaRecorderRef.current.addEventListener('dataavailable', handleDataAvailable);\n    mediaRecorderRef.current.start();\n    let percentage = percent;\n    const timer = setInterval(() => {\n      percentage = percentage + 1;\n      setPercent(percentage);\n\n      if (percentage >= 100) {\n        setCapturing(false);\n        mediaRecorderRef.current.stop();\n        SaveHandler(recordedChunks);\n        console.log(recordedChunks);\n        props.updateStartHandler(false);\n        clearInterval(timer);\n      }\n    }, 100);\n  };\n\n  const handleDataAvailable = useCallback(({\n    data\n  }) => {\n    if (data.size > 0) {\n      setRecordedChunks(prev => prev.concat(data));\n    }\n  }, [setRecordedChunks]);\n\n  const SaveHandler = file => {\n    const blob = new Blob(recordedChunks, {\n      type: 'video/webm'\n    });\n    let formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    formData.append('studentid', user.userData.studentId);\n    formData.append('file', blob);\n    console.log(blob);\n    axios.post('/api/datas/uploadfile', formData, config).then(response => {\n      if (response.data.success) {\n        setVideo(response.data.filePath);\n        props.saveVideoHandler(response.data.filePath);\n      } else {\n        alert('파일을 저장하는데 실패했습니다.');\n      }\n    });\n    setRecordedChunks([]);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"\\uC601\\uC0C1 \\uB4F1\\uB85D\"), /*#__PURE__*/React.createElement(Webcam, {\n    audio: false,\n    ref: webcamRef,\n    height: 230,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), capturing ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \" \\uB179\\uD654\\uC911 \\uD83D\\uDCF9 \") : /*#__PURE__*/React.createElement(Button, {\n    onClick: StartCaptureClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"\\uC601\\uC0C1\\uB179\\uD654\\uC2DC\\uC791\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '300px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Progress, {\n    percent: percent,\n    showInfo: false,\n    strokeWidth: 13,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default VideoUpload;","map":{"version":3,"sources":["/Users/ziho/testapp2/capstoneWeb/client/src/utils/VideoUpload.js"],"names":["React","useState","useRef","useCallback","Webcam","Progress","Button","Typography","axios","useSelector","Title","VideoUpload","props","user","state","percent","setPercent","webcamRef","mediaRecorderRef","capturing","setCapturing","recordedChunks","setRecordedChunks","video","setVideo","StartCaptureClickHandler","current","MediaRecorder","stream","mimeType","addEventListener","handleDataAvailable","start","percentage","timer","setInterval","stop","SaveHandler","console","log","updateStartHandler","clearInterval","data","size","prev","concat","file","blob","Blob","type","formData","FormData","config","header","append","userData","studentId","post","then","response","success","filePath","saveVideoHandler","alert","width"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport Webcam from 'react-webcam';\nimport { Progress, Button, Typography } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\n\n\nconst { Title } = Typography;\n\nconst VideoUpload = (props) => {\n  const user = useSelector((state) => state.user);\n  const [percent, setPercent] = useState(0);\n  const webcamRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const [capturing, setCapturing] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [video, setVideo] = useState('');\n\n  const StartCaptureClickHandler = () => {\n    setCapturing(true);\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n      mimeType: 'video/webm',\n    });\n    mediaRecorderRef.current.addEventListener('dataavailable', handleDataAvailable);\n    mediaRecorderRef.current.start();\n\n\n    let percentage = percent;\n    const timer = setInterval(() => {\n      percentage = percentage + 1;\n      setPercent(percentage);\n      if (percentage >= 100) {\n        setCapturing(false);\n        mediaRecorderRef.current.stop();\n        SaveHandler(recordedChunks);\n        console.log(recordedChunks);\n        props.updateStartHandler(false);\n        clearInterval(timer);\n      }\n    }, 100);\n  };\n\n  const handleDataAvailable = useCallback(\n    ({ data }) => {\n      if (data.size > 0) {\n        setRecordedChunks((prev) => prev.concat(data));\n      }\n    },\n    [setRecordedChunks]\n  );\n\n  const SaveHandler = (file) => {\n    const blob = new Blob(recordedChunks,{\n      type: 'video/webm',\n    });\n    let formData = new FormData();\n    const config = {\n      header: { 'content-type': 'multipart/form-data' },\n    };\n    formData.append('studentid', user.userData.studentId);\n    formData.append('file', blob);\n    console.log(blob);\n\n    axios.post('/api/datas/uploadfile', formData, config).then((response) => {\n      if (response.data.success) {\n        setVideo(response.data.filePath);\n        props.saveVideoHandler(response.data.filePath);\n        \n      } else {\n        alert('파일을 저장하는데 실패했습니다.');\n      }\n    });\n    setRecordedChunks([]);\n  };\n\n  return (\n    <>\n      <div className=\"app\">\n        <Title>영상 등록</Title>\n        <Webcam\n          audio={false}\n          ref={webcamRef}\n          height={230}\n        />\n        <br />\n        {capturing ? (\n          <p> 녹화중 📹 </p>\n        ) : (\n          <Button onClick={StartCaptureClickHandler}>영상녹화시작</Button>\n        )}\n        <br />\n        <div style={{ width: '300px' }}>\n          <Progress percent={percent} showInfo={false} strokeWidth={13} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default VideoUpload;\n"]},"metadata":{},"sourceType":"module"}